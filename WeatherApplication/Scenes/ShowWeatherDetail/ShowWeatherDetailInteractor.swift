//
//  ShowWeatherDetailInteractor.swift
//  WeatherApplication
//
//  Created by dsadaoui on 11/08/2020.
//  Copyright (c) 2020 djabir. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import WeatherApi

protocol ShowWeatherDetailBusinessLogic {
    var currentCity: City? { get set }
    func getCurrentAndForcastWeather()
}

protocol ShowWeatherDetailDataStore {
    var currentCity: City? { get set }
}

class ShowWeatherDetailInteractor: ShowWeatherDetailBusinessLogic, ShowWeatherDetailDataStore {
    // MARK: Vars
    var presenter: ShowWeatherDetailPresentationLogic?
    var worker: ShowWeatherDetailWorker?
    var currentCity: City?
    
    // MARK: Do something
    func getCurrentAndForcastWeather() {
        if let city = currentCity {
            worker?.getCurrentAndForcastWeather(lat: city.lat, lon: city.lon, completion: { [weak self] (result) in
                guard let strongSelf = self else {
                    return
                }
                switch result {
                case .success(let currentWeather):
                    let response = WeatherDetail.Success.Response(currentWeather: currentWeather)
                    strongSelf.presenter?.presentWeatherDetailSuccess(response: response)
                case .failure(let error):
                    let response = WeatherDetail.Failure.Response(error: error)
                    strongSelf.presenter?.presentWeatherDetailFailure(response: response)
                }})
        }
    }
}
