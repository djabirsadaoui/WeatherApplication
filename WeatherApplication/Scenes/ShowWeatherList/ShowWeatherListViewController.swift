//
//  ShowWeatherListViewController.swift
//  WeatherApplication
//
//  Created by dsadaoui on 11/08/2020.
//  Copyright (c) 2020 djabir. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ShowWeatherListDisplayLogic: class {
    func displaySomething(viewModel: ShowWeatherList.Something.ViewModel)
}

class ShowWeatherListViewController: UITableViewController, ShowWeatherListDisplayLogic {
    var interactor: ShowWeatherListBusinessLogic?
    var router: (NSObjectProtocol & ShowWeatherListRoutingLogic & ShowWeatherListDataPassing)?
    
    // MARK: Object lifecycle
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    required init?(coder aDecoder: NSCoder){
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: View lifecycle
    override func viewDidLoad() {
        super.viewDidLoad()
        configure()
    }
    
    // MARK: configure a view
    func configure()
    {
        self.tableView.rowHeight = 87
    }
    
    // MARK: Setup
    private func setup() {
        let viewController = self
        let interactor = ShowWeatherListInteractor()
        let presenter = ShowWeatherListPresenter()
        let router = ShowWeatherListRouter()
        let worker = ShowWeatherListWorker()
        interactor.worker = worker
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    // MARK: Routing
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }
    
    // MARK: Display
    func displaySomething(viewModel: ShowWeatherList.Something.ViewModel) {
        //nameTextField.text = viewModel.name
    }
}

extension ShowWeatherListViewController {
    
    
    //MARK: Handling data source
    override func numberOfSections(in tableView: UITableView) -> Int {
        return 1
    }
    override func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return 6
    }
    override func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        if let cell = tableView.dequeueReusableCell(withIdentifier: "cityCell")   {
            cell.textLabel?.text = "City \(indexPath.row)"
            return cell
        }
        let cell = UITableViewCell()
        cell.textLabel?.text = "City \(indexPath.row)"
        return cell
    }
    
    // MARK: Handling tableView
    override func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        
    }
}
