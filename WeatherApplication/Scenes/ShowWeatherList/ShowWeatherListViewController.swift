//
//  ShowWeatherListViewController.swift
//  WeatherApplication
//
//  Created by dsadaoui on 11/08/2020.
//  Copyright (c) 2020 djabir. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import MapKit
protocol ShowWeatherListDisplayLogic: class {
    func displayCities()
}

class ShowWeatherListViewController: UITableViewController, ShowWeatherListDisplayLogic, UIAdaptivePresentationControllerDelegate {
    // MARK: Vars
    var interactor: ShowWeatherListBusinessLogic?
    var router: (NSObjectProtocol & ShowWeatherListRoutingLogic & ShowWeatherListDataPassing)?
    var resultSearchController:UISearchController? = nil
    
    // MARK: Object lifecycle
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    required init?(coder aDecoder: NSCoder){
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: View lifecycle
    override func viewDidLoad() {
        super.viewDidLoad()
        configure()
    }
    override func viewWillAppear(_ animated: Bool) {
        self.interactor?.getAllCities()
    }
    
    // MARK: configure a view
    func configure()
    {
        self.tableView.delegate = self
        self.tableView.rowHeight = 85
        self.interactor?.getAllCities()
    }
    // MARK: Setup
    private func setup() {
        let viewController = self
        let interactor = ShowWeatherListInteractor()
        let presenter = ShowWeatherListPresenter()
        let router = ShowWeatherListRouter()
        let worker = ShowWeatherListWorker()
        interactor.worker = worker
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    // MARK: Routing
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }
    
    // MARK: Display
    func displayCities() {
        tableView.reloadData()
    }
}
// MARK: Handling TableView
extension ShowWeatherListViewController {
    override func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return self.interactor?.cities.count ?? 0
    }
    override func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        if let cell = tableView.dequeueReusableCell(withIdentifier: "cityCell")   {
            cell.textLabel?.text = self.interactor?.cities[indexPath.row].cityName
            return cell
        }
        let cell = UITableViewCell()
        cell.textLabel?.text = self.interactor?.cities[indexPath.row].cityName
        return cell
    }
    override func tableView(_ tableView: UITableView, willSelectRowAt indexPath: IndexPath) -> IndexPath? {
        if let city = self.interactor?.cities[indexPath.row] {
            self.interactor?.currentCity = city
        }
        return indexPath
    }
}
